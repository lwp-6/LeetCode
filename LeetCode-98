/*
judge if is a valid BST
inorder traversal the tree, if it is increase.
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode* root) {
        if(root == NULL)
        {
            return true;
        }
        vector<int> v;
        visit(root, v);
        int i;
        for(i = 0; i < (v.size() - 1); ++i)
        {
            if(v[i] >= v[i + 1])
            {
                return false;
            }
        }
        return true;
    }
    void visit(TreeNode *root, vector<int> &v)
    {
        if(root == NULL)
        {
            return;
        }
        visit(root->left, v);
        v.push_back(root->val);
        visit(root->right, v);
    }
};
