/*
完全平方数
给定正整数 n，找到若干个完全平方数（比如 1, 4, 9, 16, ...）使得它们的和等于 n。你需要让组成和的完全平方数的个数最少
动态规划
dp[i] = min(dp[i], dp[i - j * j] + 1)
*/
class Solution {
public:
    int numSquares(int n) {
        int *dp, i, j;
        dp = new int[n + 1];
        for(i = 0; i < n + 1; ++i)
        {
            dp[i] = i;
        }
        for(i = 1; i < n + 1; ++i)
        {
            for(j = 1; j * j <= i; j++)
            {
                dp[i] = min(dp[i], dp[i - j * j] + 1);
            }
        }
        return dp[n];
    }
};
